const {
    Client,
    ContractCreateTransaction,
    PrivateKey,
    AccountId,
} = require("@hashgraph/sdk");

async function main() {
    try {
        // Configure the client for Testnet
        const client = Client.forTestnet();
        const operatorId = "0.0.5671258"; // Replace with your Hedera account ID
        const operatorKey = PrivateKey.fromString("0x15dac915231b290291f353252a8a7199625c75a48dfc7e6b5b6e8c11334e286c"); // Replace with your private key
        client.setOperator(operatorId, operatorKey);

        // Your contract bytecode (compiled from Remix)
        const contractBytecode = "6080604052348015600e575f80fd5b50610f988061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610055575f3560e01c806329507f73146100595780637acc0b2014610075578063d1b34dd8146100a9578063dfe00c51146100c5578063e0f6ef87146100e1575b5f80fd5b610073600480360381019061006e919061069b565b6100ff565b005b61008f600480360381019061008a91906106d9565b61022f565b6040516100a0959493929190610792565b60405180910390f35b6100c360048036038101906100be919061091d565b61038b565b005b6100df60048036038101906100da9190610977565b610491565b005b6100e96105f7565b6040516100f691906109be565b60405180910390f35b5f805f8481526020019081526020015f209050806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161019a90610a21565b60405180910390fd5b81816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507ff1c7091594f6009557178dd5543d177cc73393f993898e1862dc2194232f59168382600101836002018542604051610222959493929190610b2f565b60405180910390a1505050565b5f602052805f5260405f205f91509050805f01549080600101805461025390610a6c565b80601f016020809104026020016040519081016040528092919081815260200182805461027f90610a6c565b80156102ca5780601f106102a1576101008083540402835291602001916102ca565b820191905f5260205f20905b8154815290600101906020018083116102ad57829003601f168201915b5050505050908060020180546102df90610a6c565b80601f016020809104026020016040519081016040528092919081815260200182805461030b90610a6c565b80156103565780601f1061032d57610100808354040283529160200191610356565b820191905f5260205f20905b81548152906001019060200180831161033957829003601f168201915b505050505090806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060040154905085565b5f805f8481526020019081526020015f209050806003015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461042f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042690610a21565b60405180910390fd5b818160020190816104409190610d19565b504281600401819055507ff1c7091594f6009557178dd5543d177cc73393f993898e1862dc2194232f59168382600101843342604051610484959493929190610de8565b60405180910390a1505050565b60015f8154809291906104a390610e74565b91905055506040518060a0016040528060015481526020018281526020016040518060400160405280600781526020017f437265617465640000000000000000000000000000000000000000000000000081525081526020013373ffffffffffffffffffffffffffffffffffffffff168152602001428152505f8060015481526020019081526020015f205f820151815f0155602082015181600101908161054b9190610d19565b5060408201518160020190816105619190610d19565b506060820151816003015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550608082015181600401559050507ff1c7091594f6009557178dd5543d177cc73393f993898e1862dc2194232f59166001548233426040516105ec9493929190610f05565b60405180910390a150565b60015481565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b6106208161060e565b811461062a575f80fd5b50565b5f8135905061063b81610617565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61066a82610641565b9050919050565b61067a81610660565b8114610684575f80fd5b50565b5f8135905061069581610671565b92915050565b5f80604083850312156106b1576106b0610606565b5b5f6106be8582860161062d565b92505060206106cf85828601610687565b9150509250929050565b5f602082840312156106ee576106ed610606565b5b5f6106fb8482850161062d565b91505092915050565b61070d8161060e565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61075582610713565b61075f818561071d565b935061076f81856020860161072d565b6107788161073b565b840191505092915050565b61078c81610660565b82525050565b5f60a0820190506107a55f830188610704565b81810360208301526107b7818761074b565b905081810360408301526107cb818661074b565b90506107da6060830185610783565b6107e76080830184610704565b9695505050505050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61082f8261073b565b810181811067ffffffffffffffff8211171561084e5761084d6107f9565b5b80604052505050565b5f6108606105fd565b905061086c8282610826565b919050565b5f67ffffffffffffffff82111561088b5761088a6107f9565b5b6108948261073b565b9050602081019050919050565b828183375f83830152505050565b5f6108c16108bc84610871565b610857565b9050828152602081018484840111156108dd576108dc6107f5565b5b6108e88482856108a1565b509392505050565b5f82601f830112610904576109036107f1565b5b81356109148482602086016108af565b91505092915050565b5f806040838503121561093357610932610606565b5b5f6109408582860161062d565b925050602083013567ffffffffffffffff8111156109615761096061060a565b5b61096d858286016108f0565b9150509250929050565b5f6020828403121561098c5761098b610606565b5b5f82013567ffffffffffffffff8111156109a9576109a861060a565b5b6109b5848285016108f0565b91505092915050565b5f6020820190506109d15f830184610704565b92915050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f610a0b600e8361071d565b9150610a16826109d7565b602082019050919050565b5f6020820190508181035f830152610a38816109ff565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680610a8357607f821691505b602082108103610a9657610a95610a3f565b5b50919050565b5f819050815f5260205f209050919050565b5f8154610aba81610a6c565b610ac4818661071d565b9450600182165f8114610ade5760018114610af457610b26565b60ff198316865281151560200286019350610b26565b610afd85610a9c565b5f5b83811015610b1e57815481890152600182019150602081019050610aff565b808801955050505b50505092915050565b5f60a082019050610b425f830188610704565b8181036020830152610b548187610aae565b90508181036040830152610b688186610aae565b9050610b776060830185610783565b610b846080830184610704565b9695505050505050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302610bd87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610b9d565b610be28683610b9d565b95508019841693508086168417925050509392505050565b5f819050919050565b5f610c1d610c18610c138461060e565b610bfa565b61060e565b9050919050565b5f819050919050565b610c3683610c03565b610c4a610c4282610c24565b848454610ba9565b825550505050565b5f90565b610c5e610c52565b610c69818484610c2d565b505050565b5b81811015610c8c57610c815f82610c56565b600181019050610c6f565b5050565b601f821115610cd157610ca281610a9c565b610cab84610b8e565b81016020851015610cba578190505b610cce610cc685610b8e565b830182610c6e565b50505b505050565b5f82821c905092915050565b5f610cf15f1984600802610cd6565b1980831691505092915050565b5f610d098383610ce2565b9150826002028217905092915050565b610d2282610713565b67ffffffffffffffff811115610d3b57610d3a6107f9565b5b610d458254610a6c565b610d50828285610c90565b5f60209050601f831160018114610d81575f8415610d6f578287015190505b610d798582610cfe565b865550610de0565b601f198416610d8f86610a9c565b5f5b82811015610db657848901518255600182019150602085019450602081019050610d91565b86831015610dd35784890151610dcf601f891682610ce2565b8355505b6001600288020188555050505b505050505050565b5f60a082019050610dfb5f830188610704565b8181036020830152610e0d8187610aae565b90508181036040830152610e21818661074b565b9050610e306060830185610783565b610e3d6080830184610704565b9695505050505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f610e7e8261060e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610eb057610eaf610e47565b5b600182019050919050565b7f43726561746564000000000000000000000000000000000000000000000000005f82015250565b5f610eef60078361071d565b9150610efa82610ebb565b602082019050919050565b5f60a082019050610f185f830187610704565b8181036020830152610f2a818661074b565b90508181036040830152610f3d81610ee3565b9050610f4c6060830185610783565b610f596080830184610704565b9594505050505056fea26469706673582212208420c71f24f6e302d23151e2bf26db46a395bf7afb3562cd146ad6e1e5465dd964736f6c634300081a0033"; // Replace with your actual contract bytecode

        // Create a contract creation transaction
        const transactionResponse = await new ContractCreateTransaction()
            .setBytecode(contractBytecode)
            .setGas(1000000) // Adjust gas as necessary
            .execute(client);

        // Get the receipt of the transaction
        const receipt = await transactionResponse.getReceipt(client);
        const contractId = receipt.contractId;

        console.log("Contract ID:", contractId);
    } catch (error) {
        console.error("Error during deployment:", error);
    }
}

main();
